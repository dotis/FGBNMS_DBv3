---
title: "Flower Garden Banks Data Dashboard"
format: html
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
# install.packages("rerddap")
# install.packages("plotdap")
# install.packages("mapdata")
# install.packages("leaflet")
# install.packages("tidyverse")
# install.packages("glue")
# install.packages("here")
# install.packages("flexdashboard")
# install.packages("viridis")
# put your libary loading here:
# prefer librarian::shelf() over library() b/c: 
#  1) installs on demand, 2) unquoted ok, 3) github works eg marinebon/seascapeR
librarian::shelf(
  # flexdashboard, 
  glue, here, leafem, leaflet, mapdata, plotdap, rerddap, tidyverse, viridis)
source(here("scripts/functions.R"))
```

```{r}
# CODE BLOCK W/FUNCTIONS
# GET_DATES
get_dates <- function(info){
  info$alldata$time %>%
    filter(attribute_name=="actual_range") %>%
    pull(value) %>%
    str_split(", ", simplify = T) %>%
    as.numeric() %>%
    as.POSIXct(origin = "1970-01-01", tz = "GMT")
}
# GET_ED_INFO
get_ed_info <- function(dataset){
  library(magrittr)
  #dataset = "http://131.247.136.200:8080/erddap/griddap/moda_oc_7d_fk.html"

  if (librarian:::is_valid_url(dataset)){
    ed_url <- dirname(dirname(dataset))
    dataset <- basename(dataset) %>% fs::path_ext_remove()
  } else{
    ed_url = "http://131.247.136.200:8080/erddap"
  }

  rerddap::info(dataset, url = ed_url)
}
# GET_ED_DATES_ALL
get_ed_dates_all <- function(ed_info, date_beg, date_end){
  # dates = get_ed_dates(ed_info())
  # date_beg = as.Date("2002-06-16"); date_end = as.Date("2022-01-16")

  ed_dataset = attr(ed_info, "datasetid")

  t_csv <- glue("{ed_info$base_url}/griddap/{ed_dataset}.csvp?time[({date_beg}T12:00:00Z):1:({date_end}T12:00:00Z)]")
  d_t <- try(read_csv(t_csv, show_col_types = F))
  if ("try-error" %in% class(d_t))
    stop(glue("Problem fetching dates from ERDDAP with: {t_csv}"))

  d_t %>%
    pull() %>%
    as.Date()
}

# CHL_MED_IMG
chl_med_img <- function(ERDDAPUrl_chl,field_chl,img_time_stmp,wlon,slat,elon,nlat,height=400,add_legend=T){
   # Leaflet map
 m <- leaflet(
   height = height,
   options = leafletOptions(crs = leafletCRS(crsClass = "L.CRS.EPSG4326"))) %>%
   # basemap from GBIF in 4326
   addTiles("//tile.gbif.org/4326/omt/{z}/{x}/{y}@1x.png?style=gbif-geyser") %>%
   # Call to IMaRS ERDDAP (chlor_a)
   addWMSTiles(
     baseUrl = ERDDAPUrl_chl,
     layers = field_chl,
     options = WMSTileOptions(
       version = "1.3.0", format = "image/png", transparent = T, opacity = 0.7,
       time = img_time_stmp)) %>%
   addMouseCoordinates() %>%
 fitBounds(wlon, slat, elon, nlat)
 
 if (add_legend){
   m <- m |> 
     addLegend(
       position="bottomright",
       title = paste0("CHLa (mg m^-3)<br>", img_time_stmp),
       colorNumeric("Spectral", c(0.3,30), reverse=T), seq(0.3,30))
 }
 m
}
# CHL_ANOM_IMG
chl_anom_img <- function(ERDDAPUrl_chl,field_chl,img_time_stmp,wlon,slat,elon,nlat){
   # Leaflet map
 leaflet(options = leafletOptions(crs = leafletCRS(crsClass = "L.CRS.EPSG4326"))) %>%
   # basemap from GBIF in 4326
   addTiles("//tile.gbif.org/4326/omt/{z}/{x}/{y}@1x.png?style=gbif-geyser") %>%
   # Call to IMaRS ERDDAP (chlor_a)
   addWMSTiles(
     baseUrl = ERDDAPUrl_chl,
     layers = field_chl,
     options = WMSTileOptions(
       version = "1.3.0", format = "image/png", transparent = T, opacity = 0.7,
       time = img_time_stmp)) %>%
   addMouseCoordinates() %>%
 fitBounds(wlon, slat, elon, nlat) %>%
  addLegend(
     position="bottomright",
     title = paste0("CHLa anomaly (mg m^-3)<br>", img_time_stmp),
     colorNumeric("Spectral", c(-10,10), reverse=T), seq(-10,10))
}

# SST_MED_IMG
sst_med_img <- function(ERDDAPUrl_sst,field_sst,img_time_stmp,wlon,slat,elon,nlat){
   # Leaflet map
 leaflet(options = leafletOptions(crs = leafletCRS(crsClass = "L.CRS.EPSG4326"))) %>%
   # basemap from GBIF in 4326
   addTiles("//tile.gbif.org/4326/omt/{z}/{x}/{y}@1x.png?style=gbif-geyser") %>%
   # Call to IMaRS ERDDAP (chlor_a)
   addWMSTiles(
     baseUrl = ERDDAPUrl_sst,
     layers = field_sst,
     options = WMSTileOptions(
       version = "1.3.0", format = "image/png", transparent = T, opacity = 0.7,
       time = img_time_stmp)) %>%
   addMouseCoordinates() %>%
 fitBounds(wlon, slat, elon, nlat) %>%
  addLegend(
     position="bottomright",
     title = paste0("SST (DegC)<br>", img_time_stmp),
     colorNumeric("Spectral", c(0,32), reverse=T), seq(0,32))
}
# SST_ANOM_IMG
sst_anom_img <- function(ERDDAPUrl_sst,field_sst,img_time_stmp,wlon,slat,elon,nlat){
   # Leaflet map
 leaflet(options = leafletOptions(crs = leafletCRS(crsClass = "L.CRS.EPSG4326"))) %>%
   # basemap from GBIF in 4326
   addTiles("//tile.gbif.org/4326/omt/{z}/{x}/{y}@1x.png?style=gbif-geyser") %>%
   # Call to IMaRS ERDDAP (chlor_a)
   addWMSTiles(
     baseUrl = ERDDAPUrl_sst,
     layers = field_sst,
     options = WMSTileOptions(
       version = "1.3.0", format = "image/png", transparent = T, opacity = 0.7,
       time = img_time_stmp)) %>%
   addMouseCoordinates() %>%
 fitBounds(wlon, slat, elon, nlat) %>%
  addLegend(
     position="bottomright",
     title = paste0("SST anomaly (DegC)<br>", img_time_stmp),
     colorNumeric("Spectral", c(-3,3), reverse=T), seq(-3,3))
  }
# SSCAPE_IMG
# Coming.....

```

```{r}
# source(here::here("scripts/functions.R")) 
dashboard <- "FGBNMS"
# Set Bounds from "ROI_INFO.csv" (can add other columns)
site <- read_csv("data/ROI_INFO.csv", col_types=cols()) %>%  # Pull ROI bounds from file.
filter(grepl(dashboard, ROI))
# slat <- site$slat; nlat <- site$nlat ; wlon <- site$wlon; elon <- site$elon
# For some reason, bounds don't set exactly right. Some sort of buffer? Depends on view/render?
# Could pull ERDDAP data from all of GoM instead and just zoom to ROI.
# Set manually for now
slat <- 25; nlat <- 30.0 ; wlon <- -95; elon <- -90
# Or, set center point w/buffer?

# L3 Ocean Color from IMaRS (ERDDAP)
# sst4   <- info('moda_sst4_7d_fgb'         , url = "http://131.247.136.200:8080/erddap/")
# chl   <- info('moda_oc_7d_fgb'         , url = "http://131.247.136.200:8080/erddap/")
# Seascapes from AOML Coastwatch (ERDDAP)
#  scape <- info("noaa_aoml_4729_9ee6_ab54", url = "https://cwcgom.aoml.noaa.gov/erddap/")

# Get info from ED datasets
chl_dataset <- "http://131.247.136.200:8080/erddap/griddap/moda_oc_7d_fgb.html"
chl_ed_info <- get_ed_info(chl_dataset)
sst_dataset <- "http://131.247.136.200:8080/erddap/griddap/moda_oc_7d_fgb.html"
sst_ed_info <- get_ed_info(sst_dataset)

# Get table w/bank location labels
bank_labels <- read_csv("data/FGB_Banks_info.csv", col_types=cols())

# get range of dates (should be the same for CHL and SST)
chl_d <- get_dates(chl_ed_info)
chl_ed_dates <-  get_ed_dates_all(chl_ed_info, chl_d[1], chl_d[2])
chl_dates2post <- tail(chl_ed_dates,8)
sst_d <- get_dates(sst_ed_info)
sst_ed_dates <-  get_ed_dates_all(sst_ed_info, sst_d[1], sst_d[2])
sst_dates2post <- tail(sst_ed_dates,8)
# Post 8 most recent 7D images on the dash in a 4x2 matrix.
# Each image will have two tabs: mean and anom
# There will also be a tab set between 4x2 arrays (CHL,SST,SSCAPE)

# write a function here to make an image plot
# Inputs: ERDDAP URL, dataset, title, color scale info.
ERDDAPUrl_chl <- 'http://131.247.136.200:8080/erddap/wms/moda_oc_7d_fgb/request?'
field_chl_med <- "moda_oc_7d_fgb:chlor_a_median"
field_chl_anom <- "moda_oc_7d_fgb:chlor_a_anom"
ERDDAPUrl_sst <- 'http://131.247.136.200:8080/erddap/wms/moda_sst4_7d_fgb/request?'
field_sst_med <- "moda_sst4_7d_fgb:sst4_median"
field_sst_anom <- "moda_sst4_7d_fgb:sst4_anom"
```


```{r}
#| column: margin
knitr::kable(
  bank_labels[]
)
```

## Welcome
![](data/FGBdb_map_2021.png){width=900}




## Recent 7-Day mean satellite images
```{r}
#| column: page
#| layout-ncol: 6
ht <- 160
chl_title <- "CHLa (mg m^-3)"
add_lgnd <- F

map_erddap(ERDDAPUrl_chl,field_chl_med,chl_title,chl_dates2post[8],wlon,slat,elon,nlat,height=ht,add_legend=add_lgnd)
map_erddap(ERDDAPUrl_chl,field_chl_med,chl_title,chl_dates2post[7],wlon,slat,elon,nlat,height=ht,add_legend=add_lgnd)
map_erddap(ERDDAPUrl_chl,field_chl_med,chl_title,chl_dates2post[6],wlon,slat,elon,nlat,height=ht,add_legend=add_lgnd)
map_erddap(ERDDAPUrl_chl,field_chl_med,chl_title,chl_dates2post[5],wlon,slat,elon,nlat,height=ht,add_legend=add_lgnd)
```

<!-- ![](http://131.247.136.200:8080/erddap/griddap/moda_oc_7d_fgb.png?chlor_a_median[(2023-02-04T00:00:00Z)][(25):(30)][(-95):(-90)]&.draw=surface&.vars=longitude|latitude|chlor_a_median&.colorBar=|||||&.bgColor=0xffccccff&.legend=Only) -->

<!-- TODO: turn above into a function and include [inline R expression](https://rmarkdown.rstudio.com/lesson-4.html) -->
<!-- - [erddap documentation](https://coastwatch.pfeg.noaa.gov/erddap/griddap/documentation.html)\ -->
<!--   &.legend=value -->
<!--   This specifies whether the legend on PNG images (not PDF's) should be at the Bottom (default), Off, or `Only` (which returns only the legend). -->

<!-- ![Tylar's example](http://131.247.136.200:8080/erddap/griddap/moda_sst4_7d_fgb.png?sst4_median[(2023-02-04T00:00:00Z)][(31.0):(24.01113)][(-98.0):(-88.01201)]&.draw=surface&.vars=longitude|latitude|sst4_median&.colorBar=|||||&.bgColor=0xffccccff&.legend=Only) -->


